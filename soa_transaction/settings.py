"""
Django settings for soa_transaction project.

Generated by 'django-admin startproject' using Django 3.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import json
import os
from django.core.exceptions import ImproperlyConfigured

from django.urls import reverse_lazy

# Construye directorios dentro del proyecto 
BASE_DIR = Path(__file__).resolve().parent.parent

# Retorna los datos requeridos para la conexión a la base de datos mediante un rachivo JSON
with open(os.path.join(BASE_DIR, 'secrets.json')) as secrets_file:
    secrets = json.load(secrets_file)

def get_secret(setting, secrets=secrets):
    """Get secret setting or fail with ImproperlyConfigured"""
    try:
        return secrets[setting]
    except KeyError:
        raise ImproperlyConfigured("Set the {} setting".format(setting))

# Configuración de desarrollo de inicio rápido: inadecuada para la producción
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# clave secreta utilizada en producción
SECRET_KEY = get_secret('SECRET_KEY')

# no ejecutar con la depuración activada en producción
DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'soa.nuvarmy.club']


# Definición de la Applicación
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'drf_yasg',
    'api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# rutas definidas para la transacción de la api
ROOT_URLCONF = 'soa_transaction.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'api.context_processors.bank_setting_names',
            ],
        },
    },
]

WSGI_APPLICATION = 'soa_transaction.wsgi.application'


'''
Data para la conexión a la base de datos, que obtiene los valores necesarios desde el archivo JSON
'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': get_secret('DB_NAME'),
        'USER': get_secret('USER'),
        'PASSWORD': get_secret('PASSWORD'),
        'HOST': get_secret('HOST'),
        'PORT': get_secret('PORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Ruta por defecto para la api de transacción
AUTH_USER_MODEL = "api.User"

# Internacionalización
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Llave por defecto
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {

    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ),
}

LOGIN_REDIRECT_URL = reverse_lazy('api:transaction_create_render')
LOGOUT_REDIRECT_URL = reverse_lazy('api:auth_login')

LOGIN_URL = reverse_lazy('api:auth_login')

BANK_NAME = get_secret('BANK_NAME')
BANK_ID = get_secret('BANK_ID')
IBM_CLIENT = get_secret('IBM_CLIENT')
IBM_CLIENT_URL = get_secret('IBM_CLIENT_URL')

# LOGIN
# LOGOUT
# Seleccionar la cuentra para debito
# Conectar al ESB la vista
# Probar la función de transacción
# Informe
